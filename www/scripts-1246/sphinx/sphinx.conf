#
# Sphinx configuration file sample
#
# WARNING! While this sample file mentions all available options,
# it contains (very) short helper descriptions only. Please refer to
# doc/sphinx.html for details.
#

#############################################################################
## data source definition
#############################################################################

##################### LINKS ##################################################
source links
{
	# data source type. mandatory, no default value
	# known types are 'mysql', 'pgsql', 'mssql', 'xmlpipe', 'xmlpipe2'
	type					= mysql
	sql_host				= localhost
	sql_user				= meneame
	sql_pass				=
	sql_db					= meneame
	sql_port				= 3306	# optional, default is 3306

    # sql_query_pre = REPLACE INTO sph_counter SELECT 1, MAX(link_id) FROM links
	sql_query_pre =  REPLACE INTO sph_counter SELECT 1, MAX(link_id) FROM links where link_date > date_sub(now(), interval 24 hour) and link_votes > 0
    sql_query_pre = SET NAMES utf8
    sql_query 				= \
		SELECT link_id as id, UNIX_TIMESTAMP(link_date) AS date, link_category as category, link_status+0 as status, link_author as user, link_title as title, link_tags as tags, link_url as url, link_content as content \
		FROM links \
		WHERE link_id<=( SELECT max_doc_id FROM sph_counter WHERE counter_id=1 ) AND link_votes > 0

	#sql_attr_uint			= group_id
    sql_attr_uint           = user
    sql_attr_uint           = category
    sql_attr_timestamp      = date
    sql_attr_uint      = status

	# boolean attribute declaration
	# multi-value (an arbitrary number of attributes is allowed), optional
	# equivalent to sql_attr_uint with 1-bit size
	#
	# sql_attr_bool			= is_deleted


	# bigint attribute declaration
	# multi-value (an arbitrary number of attributes is allowed), optional
	# declares a signed (unlike uint!) 64-bit attribute
	#
	# sql_attr_bigint			= my_bigint_id


	# ranged query throttling, in milliseconds
	# optional, default is 0 which means no delay
	# enforces given delay before each query step
	sql_ranged_throttle	= 0

	sql_query_info      = SELECT * FROM links WHERE link_id=$id
}


source links_delta : links
{
    sql_query_pre   =
    sql_query_pre = SET NAMES utf8
    sql_query           = \
		SELECT link_id as id, UNIX_TIMESTAMP(link_date) AS date, link_category as category, link_status+0 as status, link_author as user, link_title as title, link_tags as tags, link_url as url, link_content as content \
		FROM links WHERE link_id>( SELECT max_doc_id FROM sph_counter WHERE counter_id=1 ) AND link_votes > 0
}

index links {
	source = links
	path = /var/tmp/links
	docinfo			= extern
	mlock			= 0
	morphology	= libstemmer_spanish
	min_word_len = 2
	charset_type = utf-8
	min_stemming_len = 6
	min_prefix_len	= 0
	min_infix_len		= 0
	enable_star     = 0
	html_strip				= 0

    charset_table = 0..9, A..Z->a..z, U+23, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F,U+C5->U+E5, \
            U+E5, U+C4->U+E4, U+E4, U+D6->U+F6, U+F6, U+16B, U+0c1->a, U+0c4->a, U+0c9->e, U+0cd->i, \
            U+0d3->o, U+0d4->o, U+0da->u, U+0dd->y, U+0e1->a, U+0e4->a, U+0e9->e, U+0ed->i, U+0f3->o, \
            U+0f4->o, U+0fa->u, U+0fd->y, U+104->U+105, U+105, U+106->U+107, U+10c->c, U+10d->c, \
            U+10e->d, U+10f->d, U+116->U+117, U+117, U+118->U+119, U+11a->e, U+11b->e, U+12E->U+12F, \
            U+12F, U+139->l, U+13a->l, U+13d->l, U+13e->l, U+141->U+142, U+142, U+143->U+144, \
            U+144,U+147->n, U+148->n, U+154->r, U+155->r, U+158->r, U+159->r, U+15A->U+15B, U+15B, \
            U+160->s, U+160->U+161, U+161->s, U+164->t, U+165->t, U+16A->U+16B, U+16B, U+16e->u, \
            U+16f->u, U+172->U+173, U+173, U+179->U+17A, U+17A, U+17B->U+17C, U+17C, U+17d->z, \
            U+17e->z, U+DC->U+FC, U+DF, U+FC, \
            U+0D1->U+0F1, U+0F1, \
            U+C7->U+E7, U+E7, U+C0->a, U+E0->a, U+C8->e, U+E8->e, U+CF->i, U+EF->i, U+D2->o, U+F2->o


	stopwords = /usr/local/etc/sphinx.stopwords

	# whether to index original keywords along with stemmed versions
	# enables "=exactform" operator to work
	# optional, default is 0
	#
	# index_exact_words		= 1
}

# all the parameters are copied from the parent index,
# and may then be overridden in this index definition
index links_delta : links
{
    path            = /var/tmp/links_delta
    source          = links_delta
}

##################### POSTS ##################################################
source posts
{
	# data source type. mandatory, no default value
	# known types are 'mysql', 'pgsql', 'mssql', 'xmlpipe', 'xmlpipe2'
	type					= mysql
	sql_host				= localhost
	sql_user				= meneame
	sql_pass				=
	sql_db					= meneame
	sql_port				= 3306	# optional, default is 3306

	sql_query_pre =  REPLACE INTO sph_counter SELECT 2, MAX(post_id) FROM posts
    sql_query_pre = SET NAMES utf8
    sql_query 				= \
		SELECT post_id as id, UNIX_TIMESTAMP(post_date) AS date, post_user_id as user, post_content as content \
		FROM posts \
		WHERE post_id<=( SELECT max_doc_id FROM sph_counter WHERE counter_id=2 )

    sql_attr_uint           = user
    sql_attr_timestamp      = date
	sql_ranged_throttle	= 0
	sql_query_info      = SELECT * FROM posts WHERE post_id=$id
}


source posts_delta : posts
{
    sql_query_pre   =
    sql_query_pre = SET NAMES utf8
    sql_query           = \
		SELECT post_id as id, UNIX_TIMESTAMP(post_date) AS date, post_user_id as user, post_content as content \
		FROM posts WHERE post_id > (SELECT max_doc_id FROM sph_counter WHERE counter_id=2)
}

index posts {
	source = posts
	path = /var/tmp/posts
	docinfo			= extern
	mlock			= 0
	morphology	= libstemmer_spanish
	min_word_len = 2
	charset_type = utf-8
	min_stemming_len = 6
	min_prefix_len	= 0
	min_infix_len		= 0
	enable_star     = 0
	html_strip				= 0

    charset_table = 0..9, A..Z->a..z, U+23, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F,U+C5->U+E5, \
            U+E5, U+C4->U+E4, U+E4, U+D6->U+F6, U+F6, U+16B, U+0c1->a, U+0c4->a, U+0c9->e, U+0cd->i, \
            U+0d3->o, U+0d4->o, U+0da->u, U+0dd->y, U+0e1->a, U+0e4->a, U+0e9->e, U+0ed->i, U+0f3->o, \
            U+0f4->o, U+0fa->u, U+0fd->y, U+104->U+105, U+105, U+106->U+107, U+10c->c, U+10d->c, \
            U+10e->d, U+10f->d, U+116->U+117, U+117, U+118->U+119, U+11a->e, U+11b->e, U+12E->U+12F, \
            U+12F, U+139->l, U+13a->l, U+13d->l, U+13e->l, U+141->U+142, U+142, U+143->U+144, \
            U+144,U+147->n, U+148->n, U+154->r, U+155->r, U+158->r, U+159->r, U+15A->U+15B, U+15B, \
            U+160->s, U+160->U+161, U+161->s, U+164->t, U+165->t, U+16A->U+16B, U+16B, U+16e->u, \
            U+16f->u, U+172->U+173, U+173, U+179->U+17A, U+17A, U+17B->U+17C, U+17C, U+17d->z, \
            U+17e->z, U+DC->U+FC, U+DF, U+FC, \
            U+0D1->U+0F1, U+0F1, \
            U+C7->U+E7, U+E7, U+C0->a, U+E0->a, U+C8->e, U+E8->e, U+CF->i, U+EF->i, U+D2->o, U+F2->o


	stopwords = /usr/local/etc/sphinx.stopwords
}

# all the parameters are copied from the parent index,
# and may then be overridden in this index definition
index posts_delta : posts
{
    path            = /var/tmp/posts_delta
    source          = posts_delta
}


##################### COMMENTS ##################################################
source comments
{
	# data source type. mandatory, no default value
	# known types are 'mysql', 'pgsql', 'mssql', 'xmlpipe', 'xmlpipe2'
	type					= mysql
	sql_host				= localhost
	sql_user				= meneame
	sql_pass				=
	sql_db					= meneame
	sql_port				= 3306	# optional, default is 3306

	sql_query_pre =  REPLACE INTO sph_counter SELECT 3, MAX(comment_id) FROM comments
    sql_query_pre = SET NAMES utf8
    sql_query 				= \
		SELECT comment_id as id, UNIX_TIMESTAMP(comment_date) AS date, comment_user_id as user, comment_content as content \
		FROM comments \
		WHERE comment_id<=( SELECT max_doc_id FROM sph_counter WHERE counter_id=3 )

    sql_attr_uint           = user
    sql_attr_timestamp      = date
	sql_ranged_throttle	= 0
	sql_query_info      = SELECT * FROM comments WHERE comment_id=$id
}


source comments_delta : comments
{
    sql_query_pre   =
    sql_query_pre = SET NAMES utf8
    sql_query           = \
		SELECT comment_id as id, UNIX_TIMESTAMP(comment_date) AS date, comment_user_id as user, comment_content as content \
		FROM comments WHERE comment_id > (SELECT max_doc_id FROM sph_counter WHERE counter_id=3)
}

index comments {
	source = comments
	path = /var/tmp/comments
	docinfo			= extern
	mlock			= 0
	morphology	= libstemmer_spanish
	min_word_len = 2
	charset_type = utf-8
	min_stemming_len = 6
	min_prefix_len	= 0
	min_infix_len		= 0
	enable_star     = 0
	html_strip				= 0

    charset_table = 0..9, A..Z->a..z, U+23, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F,U+C5->U+E5, \
            U+E5, U+C4->U+E4, U+E4, U+D6->U+F6, U+F6, U+16B, U+0c1->a, U+0c4->a, U+0c9->e, U+0cd->i, \
            U+0d3->o, U+0d4->o, U+0da->u, U+0dd->y, U+0e1->a, U+0e4->a, U+0e9->e, U+0ed->i, U+0f3->o, \
            U+0f4->o, U+0fa->u, U+0fd->y, U+104->U+105, U+105, U+106->U+107, U+10c->c, U+10d->c, \
            U+10e->d, U+10f->d, U+116->U+117, U+117, U+118->U+119, U+11a->e, U+11b->e, U+12E->U+12F, \
            U+12F, U+139->l, U+13a->l, U+13d->l, U+13e->l, U+141->U+142, U+142, U+143->U+144, \
            U+144,U+147->n, U+148->n, U+154->r, U+155->r, U+158->r, U+159->r, U+15A->U+15B, U+15B, \
            U+160->s, U+160->U+161, U+161->s, U+164->t, U+165->t, U+16A->U+16B, U+16B, U+16e->u, \
            U+16f->u, U+172->U+173, U+173, U+179->U+17A, U+17A, U+17B->U+17C, U+17C, U+17d->z, \
            U+17e->z, U+DC->U+FC, U+DF, U+FC, \
            U+0D1->U+0F1, U+0F1, \
            U+C7->U+E7, U+E7, U+C0->a, U+E0->a, U+C8->e, U+E8->e, U+CF->i, U+EF->i, U+D2->o, U+F2->o


	stopwords = /usr/local/etc/sphinx.stopwords
}

# all the parameters are copied from the parent index,
# and may then be overridden in this index definition
index comments_delta : comments
{
    path            = /var/tmp/comments_delta
    source          = comments_delta
}





#############################################################################
## indexer settings
#############################################################################

indexer
{
	# memory limit, in bytes, kiloytes (16384K) or megabytes (256M)
	# optional, default is 32M, max is 2047M, recommended is 256M to 1024M
	mem_limit			= 128M

	# maximum IO calls per second (for I/O throttling)
	# optional, default is 0 (unlimited)
	#
	# max_iops			= 40


	# maximum IO call size, bytes (for I/O throttling)
	# optional, default is 0 (unlimited)
	#
	# max_iosize		= 1048576
}

#############################################################################
## searchd settings
#############################################################################

searchd
{
	# hostname, port, or hostname:port, or /unix/socket/path to listen on
	# multi-value, multiple listen points are allowed
	# optional, default is 0.0.0.0:3312 (listen on all interfaces, port 3312)
	#
	# listen				= 127.0.0.1
	# listen				= 192.168.0.1:3312
	# listen				= 3312
	# listen				= /var/run/searchd.sock


	# log file, searchd run info is logged here
	# optional, default is 'searchd.log'
	log					= /var/log/searchd.log

	# query log file, all search queries are logged here
	# optional, default is empty (do not log queries)
	#query_log			= /var/log/query.log

	# client read timeout, seconds
	# optional, default is 5
	read_timeout		= 5

	# request timeout, seconds
	# optional, default is 5 minutes
	client_timeout		= 300

	# maximum amount of children to fork (concurrent searches to run)
	# optional, default is 0 (unlimited)
	max_children		= 30

	# PID file, searchd process ID file name
	# mandatory
	pid_file			= /var/run/searchd.pid

	# max amount of matches the daemon ever keeps in RAM, per-index
	# WARNING, THERE'S ALSO PER-QUERY LIMIT, SEE SetLimits() API CALL
	# default is 1000 (just like Google)
	max_matches			= 1000

	# seamless rotate, prevents rotate stalls if precaching huge datasets
	# optional, default is 1
	seamless_rotate		= 1

	# whether to forcibly preopen all indexes on startup
	# optional, default is 0 (do not preopen)
	preopen_indexes		= 0

	# whether to unlink .old index copies on succesful rotation.
	# optional, default is 1 (do unlink)
	unlink_old			= 1

	# attribute updates periodic flush timeout, seconds
	# updates will be automatically dumped to disk this frequently
	# optional, default is 0 (disable periodic flush)
	#
	# attr_flush_period	= 900


	# instance-wide ondisk_dict defaults (per-index value take precedence)
	# optional, default is 0 (precache all dictionaries in RAM)
	#
	# ondisk_dict_default	= 1


	# MVA updates pool size
	# shared between all instances of searchd, disables attr flushes!
	# optional, default size is 1M
	mva_updates_pool	= 1M

	# max allowed network packet size
	# limits both query packets from clients, and responses from agents
	# optional, default size is 8M
	max_packet_size		= 8M

	# crash log path
	# searchd will (try to) log crashed query to 'crash_log_path.PID' file
	# optional, default is empty (do not create crash logs)
	#
	# crash_log_path		= /var/log/crash


	# max allowed per-query filter count
	# optional, default is 256
	max_filters			= 256

	# max allowed per-filter values count
	# optional, default is 4096
	max_filter_values	= 4096
}

# --eof--
